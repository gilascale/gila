
Window :: type {
    title: string
}


impl Window {

    init :: fn (*this) -> Error {

    }

}


create_window :: fn(title: string) -> Result(Window) {
    
    // theres got to be a better way of doing this...
    mem := @sizeof(Window) |> OPENGL_ALLOCATOR.alloc
    win := @memset mem, Window(title) 

    // perhaps we can do this?
    win := Window(title)  |> OPENGL_ALLOCATOR.from
    
    // how do we easily manage this error and bubble it up?
    w.init()

    // Result type supports implicit construction from this particular type
    return win
}
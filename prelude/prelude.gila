Union type
    types: any[]
end

Error type
    msg: string
end

Data type
    data: any
end

Result = Error | Data

RangeIterator type
    counter: u32
    limit: u32
end

__iter fn(self: RangeIterator) -> bool do
    self.counter = self.counter + 1
    return self.counter==self.limit+1
end


SliceIterator type
    counter: u32
    s: any[]
end

__iter fn(self: SliceIterator) -> bool do
    res = self.counter == len(self.s)
    self.counter = self.counter + 1
    return res
end

List type
    s: any[]
end

length fn(self:List) -> i64 return len(self.s)

__create_iter fn(self:List) -> SliceIterator return SliceIterator(counter=0,s=self.s)
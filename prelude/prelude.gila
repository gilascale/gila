Error type
    msg: string
end

// what this gets compiled to is
// __result = my_fn()
// if !__result.is_ok
//   return __result
// end
// r = __result.data
//
// Eventually we may want an algebraic data type like so
// Result = type $T | Error end
Result type
  is_ok: bool
end


Printable type
end


Iterator type
end

__iter fn(self:Iterator) end


RangeIterator type
    counter: u32
    limit: u32
end

__iter fn(self: RangeIterator) -> bool
    self.counter = self.counter + 1
    return self.counter==self.limit+1
end